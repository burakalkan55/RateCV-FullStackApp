generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  password  String
  bio       String?
  cvUrl     String?
  cvBase64  String?
  createdAt DateTime @default(now())
  accounts  Account[]
  sessions  Session[]
  ratingsGiven     Rating[]  @relation("ratings_given")
  ratingsReceived  Rating[]  @relation("ratings_received")
  commentsGiven    Comment[] @relation("comments_given")
  commentsReceived Comment[] @relation("comments_received")
}

model Rating {
  id        Int      @id @default(autoincrement())
  value     Int
  userId    Int
  targetId  Int
  createdAt DateTime @default(now())

  user   User @relation("ratings_given", fields: [userId], references: [id])
  target User @relation("ratings_received", fields: [targetId], references: [id])

  @@unique([userId, targetId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String   @db.Text
  userId    Int
  targetId  Int
  createdAt DateTime @default(now())

  user   User @relation("comments_given", fields: [userId], references: [id])
  target User @relation("comments_received", fields: [targetId], references: [id])
}


model Account {  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
